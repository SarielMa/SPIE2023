1. Please go to this link(https://github.com/MIC-DKFZ/nnUNet) for instructions on installing and configuring nnUnet and dependent libraries.
2. All the experimental data can be downloaded from http://medicaldecathlon.com/ or as shown in paper(Isensee, F., Jaeger, P. F., Kohl, S. A., Petersen, J., & Maier-Hein, K. H. (2020). nnU-Net: a self-configuring method 
for deep learning-based biomedical image segmentation. Nature Methods, 1-9.)
3. Go to "nnunet/run/"
4. use "python run_training --task id" to get the baseline model
5. use "python run_IMA_training --task id" to get the IMA model
6. use "python run_PGD_training --task id" to get the PGD model
6. use "run_my_evaluation.py" to get the evaluation result.

The experiment was run on Tesla V100 GPUs, CentOS system.

Based on original nnUnet, we did modifications on:
1.nnunet/training/network_training/network_trainer.py
2.nnunet/training/network_training/nnUNetTrainer.py
3.nnunet/training/network_training/nnUNetTrainerV2.py
4.nnunet/training/loss_functions/dice_loss.py
5.nnunet/training/loss_functions/crossentropy.py
6.nnunet/training/loss_functions/deep_supervision.py
7.nnunet/training/dataloading/dataset_loading.py
8.nnunet/training/data_augmentation/data_augmentation_moreDA.py
9.nnunet/utilities/to_torch.py



